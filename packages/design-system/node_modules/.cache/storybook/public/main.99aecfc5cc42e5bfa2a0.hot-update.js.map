{"version":3,"file":"main.99aecfc5cc42e5bfa2a0.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AAEA;AACA;AAFA;AANA;AADA;AATA;AAuBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAHA;AAWA;AAMA;AAPA;AAVA;AADA;AADA;AAFA;AAxBA;AATA;AA+DA;AAAA;AA/EA;AADA;AAqFA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAHA;AAWA;AAMA;AAPA;AAVA;AADA;AADA;AADA;AADA;AAFA;AAgCA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AANA;AADA;AAUA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAKA;AAAA;AAEA;AAAA;AACA;AAAA;AADA;AAFA;AANA;AADA;AAXA;AAtHA;AADA;AAsJA","sources":["webpack://design-system/./DesktopShell.tsx"],"sourcesContent":["import { Fragment, useState } from 'react'\nimport classNames from 'classnames'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { CogIcon, HomeIcon, MenuIcon, XIcon } from '@heroicons/react/outline'\n\nconst navigation = [\n  { name: 'Dashboard', href: '#', icon: HomeIcon, current: true },\n  { name: 'Settings', href: '#', icon: CogIcon, current: false },\n]\n\nexport const DesktopShell = () => {\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n\n  return (\n    <>\n      <div>\n        <Transition.Root show={sidebarOpen} as={Fragment}>\n          <Dialog\n            as=\"div\"\n            className=\"fixed inset-0 z-40 flex md:hidden\"\n            onClose={setSidebarOpen}\n          >\n            <Transition.Child\n              as={Fragment}\n              enter=\"transition-opacity ease-linear duration-300\"\n              enterFrom=\"opacity-0\"\n              enterTo=\"opacity-100\"\n              leave=\"transition-opacity ease-linear duration-300\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Dialog.Overlay className=\"fixed inset-0 bg-gray-600 bg-opacity-75\" />\n            </Transition.Child>\n            <Transition.Child\n              as={Fragment}\n              enter=\"transition ease-in-out duration-300 transform\"\n              enterFrom=\"-translate-x-full\"\n              enterTo=\"translate-x-0\"\n              leave=\"transition ease-in-out duration-300 transform\"\n              leaveFrom=\"translate-x-0\"\n              leaveTo=\"-translate-x-full\"\n            >\n              <div className=\"relative flex flex-col flex-1 w-full max-w-xs bg-orange-600\">\n                <Transition.Child\n                  as={Fragment}\n                  enter=\"ease-in-out duration-300\"\n                  enterFrom=\"opacity-0\"\n                  enterTo=\"opacity-100\"\n                  leave=\"ease-in-out duration-300\"\n                  leaveFrom=\"opacity-100\"\n                  leaveTo=\"opacity-0\"\n                >\n                  <div className=\"absolute top-0 right-0 pt-2 -mr-12\">\n                    <button\n                      type=\"button\"\n                      className=\"flex items-center justify-center w-10 h-10 ml-1 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\"\n                      onClick={() => setSidebarOpen(false)}\n                    >\n                      <span className=\"sr-only\">Close sidebar</span>\n                      <XIcon\n                        className=\"w-6 h-6 text-white\"\n                        aria-hidden=\"true\"\n                      />\n                    </button>\n                  </div>\n                </Transition.Child>\n                <div className=\"flex-1 h-0 pt-5 pb-4 overflow-y-auto\">\n                  <div className=\"flex items-center flex-shrink-0 px-4\"></div>\n                  <nav className=\"px-2 mt-5 space-y-1\">\n                    {navigation.map((item) => (\n                      <a\n                        key={item.name}\n                        href={item.href}\n                        className={classNames(\n                          item.current\n                            ? 'bg-gray-900 text-white'\n                            : 'text-gray-300 hover:bg-gray-700 hover:text-white',\n                          'group flex items-center px-2 py-2 text-base font-medium rounded-md',\n                        )}\n                      >\n                        <item.icon\n                          className={classNames(\n                            item.current\n                              ? 'text-gray-300'\n                              : 'text-gray-400 group-hover:text-gray-300',\n                            'mr-4 flex-shrink-0 h-6 w-6',\n                          )}\n                          aria-hidden=\"true\"\n                        />\n                        {item.name}\n                      </a>\n                    ))}\n                  </nav>\n                </div>\n              </div>\n            </Transition.Child>\n            <div className=\"flex-shrink-0 w-14\"></div>\n          </Dialog>\n        </Transition.Root>\n\n        {/* Static sidebar for desktop */}\n        <div className=\"hidden md:flex md:w-64 md:flex-col md:fixed md:inset-y-0\">\n          {/* Sidebar component, swap this element with another sidebar if you like */}\n          <div className=\"flex flex-col flex-1 min-h-0 bg-orange-600\">\n            <div className=\"flex flex-col flex-1 pt-5 pb-4 overflow-y-auto\">\n              <nav className=\"flex-1 px-2 mt-5 space-y-1\">\n                {navigation.map((item) => (\n                  <a\n                    key={item.name}\n                    href={item.href}\n                    className={classNames(\n                      item.current\n                        ? 'bg-orange-900 text-white'\n                        : 'text-gray-300 hover:bg-orange-800 hover:text-white',\n                      'group flex items-center px-2 py-2 text-sm font-medium rounded-md',\n                    )}\n                  >\n                    <item.icon\n                      className={classNames(\n                        item.current\n                          ? 'text-gray-300'\n                          : 'text-gray-400 group-hover:text-gray-300',\n                        'mr-3 flex-shrink-0 h-6 w-6',\n                      )}\n                      aria-hidden=\"true\"\n                    />\n                    {item.name}\n                  </a>\n                ))}\n              </nav>\n            </div>\n          </div>\n        </div>\n        <div className=\"flex flex-col flex-1 md:pl-64\">\n          <div className=\"sticky top-0 z-10 pt-1 pl-1 bg-gray-100 md:hidden sm:pl-3 sm:pt-3\">\n            <button\n              type=\"button\"\n              className=\"-ml-0.5 -mt-0.5 h-12 w-12 inline-flex items-center justify-center rounded-md text-gray-500 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\"\n              onClick={() => setSidebarOpen(true)}\n            >\n              <span className=\"sr-only\">Open sidebar</span>\n              <MenuIcon className=\"w-6 h-6\" aria-hidden=\"true\" />\n            </button>\n          </div>\n          <main className=\"flex-1\">\n            <div className=\"py-6\">\n              <div className=\"px-4 mx-auto max-w-7xl sm:px-6 lg:px-8\">\n                <h1 className=\"text-2xl font-semibold text-gray-900\">\n                  Desktop App\n                </h1>\n              </div>\n              <div className=\"px-4 mx-auto max-w-7xl sm:px-6 md:px-8\">\n                {/* Replace with your content */}\n                <div className=\"py-4\">\n                  <div className=\"border-4 border-gray-200 border-dashed rounded-lg h-96\" />\n                </div>\n                {/* /End replace */}\n              </div>\n            </div>\n          </main>\n        </div>\n      </div>\n    </>\n  )\n}\n"],"names":[],"sourceRoot":""}